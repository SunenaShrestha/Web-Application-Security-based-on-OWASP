{"ast":null,"code":"var _jsxFileName = \"D:\\\\thankyoustickers\\\\Web-Application-Security-based-on-OWASP\\\\src\\\\components\\\\AuthModal.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport Modal from './Modal';\nimport './AuthModal.css';\nimport './PasswordStrength.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordValidation = ({\n  password\n}) => {\n  const requirements = [{\n    text: \"Minimum 8 characters\",\n    test: () => password.length >= 8\n  }, {\n    text: \"At least one uppercase letter\",\n    test: () => /[A-Z]/.test(password)\n  }, {\n    text: \"At least one number\",\n    test: () => /[0-9]/.test(password)\n  }, {\n    text: \"At least one special character (@#$%^&*)\",\n    test: () => /[@#$%^&*]/.test(password)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-requirements\",\n    children: requirements.map((req, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `requirement ${req.test() ? 'valid' : 'invalid'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"requirement-icon\",\n        children: req.test() ? '✓' : '✕'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"requirement-text\",\n        children: req.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = PasswordValidation;\nconst AuthModal = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const {\n    setUser,\n    checkAuth\n  } = useAuth();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isReset, setIsReset] = useState(false);\n  const [registrationSuccess, setRegistrationSuccess] = useState(false);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    username: ''\n  });\n  const [error, setError] = useState('');\n  const [showPasswordRequirements, setShowPasswordRequirements] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const validatePassword = password => {\n    const requirements = [password.length >= 8, /[A-Z]/.test(password), /[0-9]/.test(password), /[@#$%^&*]/.test(password)];\n    return requirements.every(Boolean);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    try {\n      if (!isLogin) {\n        // Validate password requirements\n        if (!validatePassword(formData.password)) {\n          setError('Password must be at least 8 characters long and contain at least one uppercase letter, one number, and one special character (@#$%^&*)');\n          setLoading(false);\n          return;\n        }\n        if (formData.password !== formData.confirmPassword) {\n          setError('Passwords do not match');\n          setLoading(false);\n          return;\n        }\n      }\n      const response = await fetch(`http://localhost/backend/api/${isLogin ? 'login' : 'register'}.php`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: formData.username,\n          email: formData.email,\n          password: formData.password\n        })\n      });\n      const data = await response.json();\n      if (!data.success) {\n        throw new Error(data.error || 'Something went wrong');\n      }\n      if (isLogin) {\n        // Store user data and token\n        localStorage.setItem('user', JSON.stringify(data.user));\n        localStorage.setItem('token', data.token);\n        onClose();\n      } else {\n        // After successful registration, switch to login mode\n        setIsLogin(true);\n        setFormData({\n          username: '',\n          email: formData.email,\n          // Keep the email for login\n          password: '',\n          confirmPassword: ''\n        });\n        setMessage('Registration successful! Please login with your credentials.');\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  if (registrationSuccess) {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-modal success-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Registration Successful! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-btn\",\n          onClick: () => {\n            setRegistrationSuccess(false);\n            setIsLogin(true);\n          },\n          children: \"Back to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isLogin ? 'Login' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [!isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: formData.username,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleChange,\n            onFocus: () => !isLogin && setShowPasswordRequirements(true),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), !isLogin && showPasswordRequirements && /*#__PURE__*/_jsxDEV(PasswordValidation, {\n            password: formData.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"confirmPassword\",\n            value: formData.confirmPassword,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          disabled: loading,\n          children: isLogin ? 'Login' : 'Sign Up'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-links\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"link-btn\",\n          onClick: () => setIsLogin(!isLogin),\n          children: isLogin ? \"Don't have an account? Sign Up\" : \"Already have an account? Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthModal, \"5UlAYnCp1StBVXx3oSTvo3suKsU=\", false, function () {\n  return [useAuth];\n});\n_c2 = AuthModal;\nexport default AuthModal;\nvar _c, _c2;\n$RefreshReg$(_c, \"PasswordValidation\");\n$RefreshReg$(_c2, \"AuthModal\");","map":{"version":3,"names":["useState","useAuth","Modal","jsxDEV","_jsxDEV","PasswordValidation","password","requirements","text","test","length","className","children","map","req","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","AuthModal","isOpen","onClose","_s","setUser","checkAuth","isLogin","setIsLogin","isReset","setIsReset","registrationSuccess","setRegistrationSuccess","formData","setFormData","email","confirmPassword","username","error","setError","showPasswordRequirements","setShowPasswordRequirements","loading","setLoading","message","setMessage","validatePassword","every","Boolean","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","success","Error","localStorage","setItem","user","token","err","handleChange","target","name","value","onClick","onSubmit","type","onChange","required","onFocus","disabled","_c2","$RefreshReg$"],"sources":["D:/thankyoustickers/Web-Application-Security-based-on-OWASP/src/components/AuthModal.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport Modal from './Modal';\r\nimport './AuthModal.css';\r\nimport './PasswordStrength.css';\r\n\r\nconst PasswordValidation = ({ password }) => {\r\n  const requirements = [\r\n    {\r\n      text: \"Minimum 8 characters\",\r\n      test: () => password.length >= 8\r\n    },\r\n    {\r\n      text: \"At least one uppercase letter\",\r\n      test: () => /[A-Z]/.test(password)\r\n    },\r\n    {\r\n      text: \"At least one number\",\r\n      test: () => /[0-9]/.test(password)\r\n    },\r\n    {\r\n      text: \"At least one special character (@#$%^&*)\",\r\n      test: () => /[@#$%^&*]/.test(password)\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"password-requirements\">\r\n      {requirements.map((req, index) => (\r\n        <div key={index} className={`requirement ${req.test() ? 'valid' : 'invalid'}`}>\r\n          <span className=\"requirement-icon\">\r\n            {req.test() ? '✓' : '✕'}\r\n          </span>\r\n          <span className=\"requirement-text\">{req.text}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AuthModal = ({ isOpen, onClose }) => {\r\n  const { setUser, checkAuth } = useAuth();\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isReset, setIsReset] = useState(false);\r\n  const [registrationSuccess, setRegistrationSuccess] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    username: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [showPasswordRequirements, setShowPasswordRequirements] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const validatePassword = (password) => {\r\n    const requirements = [\r\n      password.length >= 8,\r\n      /[A-Z]/.test(password),\r\n      /[0-9]/.test(password),\r\n      /[@#$%^&*]/.test(password)\r\n    ];\r\n    return requirements.every(Boolean);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      if (!isLogin) {\r\n        // Validate password requirements\r\n        if (!validatePassword(formData.password)) {\r\n          setError('Password must be at least 8 characters long and contain at least one uppercase letter, one number, and one special character (@#$%^&*)');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        if (formData.password !== formData.confirmPassword) {\r\n          setError('Passwords do not match');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n      }\r\n\r\n      const response = await fetch(`http://localhost/backend/api/${isLogin ? 'login' : 'register'}.php`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username: formData.username,\r\n          email: formData.email,\r\n          password: formData.password,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!data.success) {\r\n        throw new Error(data.error || 'Something went wrong');\r\n      }\r\n\r\n      if (isLogin) {\r\n        // Store user data and token\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        localStorage.setItem('token', data.token);\r\n        onClose();\r\n      } else {\r\n        // After successful registration, switch to login mode\r\n        setIsLogin(true);\r\n        setFormData({\r\n          username: '',\r\n          email: formData.email, // Keep the email for login\r\n          password: '',\r\n          confirmPassword: '',\r\n        });\r\n        setMessage('Registration successful! Please login with your credentials.');\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  if (registrationSuccess) {\r\n    return (\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <div className=\"auth-modal success-modal\">\r\n          <h2>Registration Successful! 🎉</h2>\r\n          <p>{message}</p>\r\n          <button \r\n            className=\"submit-btn\"\r\n            onClick={() => {\r\n              setRegistrationSuccess(false);\r\n              setIsLogin(true);\r\n            }}\r\n          >\r\n            Back to Login\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <div className=\"auth-modal\">\r\n        <h2>{isLogin ? 'Login' : 'Sign Up'}</h2>\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          {!isLogin && (\r\n            <div className=\"form-group\">\r\n              <label>Username</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                value={formData.username}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              onFocus={() => !isLogin && setShowPasswordRequirements(true)}\r\n              required\r\n            />\r\n            {!isLogin && showPasswordRequirements && (\r\n              <PasswordValidation password={formData.password} />\r\n            )}\r\n          </div>\r\n\r\n          {!isLogin && (\r\n            <div className=\"form-group\">\r\n              <label>Confirm Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                value={formData.confirmPassword}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\r\n            {isLogin ? 'Login' : 'Sign Up'}\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"auth-links\">\r\n          <button \r\n            className=\"link-btn\"\r\n            onClick={() => setIsLogin(!isLogin)}\r\n          >\r\n            {isLogin ? \"Don't have an account? Sign Up\" : \"Already have an account? Login\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AuthModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}