{"ast":null,"code":"var _jsxFileName = \"D:\\\\thankyoustickers\\\\Web-Application-Security-based-on-OWASP\\\\src\\\\pages\\\\LogDetail.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogDetail = ({\n  isOpen,\n  onClose,\n  logId\n}) => {\n  _s();\n  const [selectedLog, setSelectedLog] = useState(null);\n\n  // Fetch logs (same as before)\n  // ...\n\n  if (!isOpen || !selectedLog) return null;\n\n  // Attack-specific warning messages\n  const attackWarnings = {\n    'Brute Force': '⚠️ Brute Force Attack: Multiple failed login attempts from this IP.',\n    'SQL Injection': '⚠️ SQL Injection Attempt: Malicious input detected.',\n    'Normal': null\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Log Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [selectedLog.attack_type !== 'Normal' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `attack-warning ${selectedLog.attack_type.toLowerCase().replace(' ', '-')}`,\n          children: attackWarnings[selectedLog.attack_type]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"log-details\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Attack Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `tag ${selectedLog.attack_type !== 'Normal' ? 'attack' : 'normal'}`,\n              children: selectedLog.attack_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(LogDetail, \"7IqqHoHwamx0RfESYG06ab7d3ec=\");\n_c = LogDetail;\nexport default LogDetail;\nvar _c;\n$RefreshReg$(_c, \"LogDetail\");","map":{"version":3,"names":["LogDetail","isOpen","onClose","logId","_s","selectedLog","setSelectedLog","useState","attackWarnings","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","attack_type","toLowerCase","replace","_c","$RefreshReg$"],"sources":["D:/thankyoustickers/Web-Application-Security-based-on-OWASP/src/pages/LogDetail.jsx"],"sourcesContent":["const LogDetail = ({ isOpen, onClose, logId }) => {\r\n    const [selectedLog, setSelectedLog] = useState(null);\r\n\r\n    // Fetch logs (same as before)\r\n    // ...\r\n\r\n    if (!isOpen || !selectedLog) return null;\r\n\r\n    // Attack-specific warning messages\r\n    const attackWarnings = {\r\n        'Brute Force': '⚠️ Brute Force Attack: Multiple failed login attempts from this IP.',\r\n        'SQL Injection': '⚠️ SQL Injection Attempt: Malicious input detected.',\r\n        'Normal': null\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-overlay\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h2>Log Details</h2>\r\n                    <button onClick={onClose}>×</button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {/* Attack Warning */}\r\n                    {selectedLog.attack_type !== 'Normal' && (\r\n                        <div className={`attack-warning ${selectedLog.attack_type.toLowerCase().replace(' ', '-')}`}>\r\n                            {attackWarnings[selectedLog.attack_type]}\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Log Details */}\r\n                    <div className=\"log-details\">\r\n                        <div className=\"detail-row\">\r\n                            <span>Attack Type:</span>\r\n                            <span className={`tag ${selectedLog.attack_type !== 'Normal' ? 'attack' : 'normal'}`}>\r\n                                {selectedLog.attack_type}\r\n                            </span>\r\n                        </div>\r\n                        {/* Other log details (IP, email, etc.) */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default LogDetail;"],"mappings":";;;AAAA,MAAMA,SAAS,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACA;;EAEA,IAAI,CAACN,MAAM,IAAI,CAACI,WAAW,EAAE,OAAO,IAAI;;EAExC;EACA,MAAMG,cAAc,GAAG;IACnB,aAAa,EAAE,qEAAqE;IACpF,eAAe,EAAE,qDAAqD;IACtE,QAAQ,EAAE;EACd,CAAC;EAED,oBACIC,OAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC1BF,OAAA;MAAKC,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1BF,OAAA;QAAKC,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzBF,OAAA;UAAAE,QAAA,EAAI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBN,OAAA;UAAQO,OAAO,EAAEd,OAAQ;UAAAS,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACNN,OAAA;QAAKC,SAAS,EAAC,YAAY;QAAAC,QAAA,GAEtBN,WAAW,CAACY,WAAW,KAAK,QAAQ,iBACjCR,OAAA;UAAKC,SAAS,EAAE,kBAAkBL,WAAW,CAACY,WAAW,CAACC,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EAAG;UAAAR,QAAA,EACvFH,cAAc,CAACH,WAAW,CAACY,WAAW;QAAC;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CACR,eAGDN,OAAA;UAAKC,SAAS,EAAC,aAAa;UAAAC,QAAA,eACxBF,OAAA;YAAKC,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvBF,OAAA;cAAAE,QAAA,EAAM;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACzBN,OAAA;cAAMC,SAAS,EAAE,OAAOL,WAAW,CAACY,WAAW,KAAK,QAAQ,GAAG,QAAQ,GAAG,QAAQ,EAAG;cAAAN,QAAA,EAChFN,WAAW,CAACY;YAAW;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACX,EAAA,CA5CIJ,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AA6Cf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}