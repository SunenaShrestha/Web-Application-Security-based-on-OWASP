{"ast":null,"code":"var _jsxFileName = \"D:\\\\thankyoustickers\\\\Web-Application-Security-based-on-OWASP\\\\src\\\\pages\\\\LogDetail.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './LogDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogDetail = ({\n  isOpen,\n  onClose,\n  logId\n}) => {\n  _s();\n  const [loginAttempts, setLoginAttempts] = useState([]);\n  const [selectedLog, setSelectedLog] = useState(null);\n  const [isBruteForce, setIsBruteForce] = useState(false);\n  useEffect(() => {\n    const fetchLogs = async () => {\n      try {\n        const response = await fetch('http://localhost/backend/api/get_logs.php');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        if (data.success) {\n          setLoginAttempts(data.attempts);\n\n          // Find the selected log\n          const log = data.attempts.find(attempt => attempt.id === logId);\n          if (log) {\n            setSelectedLog(log);\n\n            // Get all failed attempts from the same IP\n            const failedAttemptsFromIP = data.attempts.filter(attempt => attempt.ip_address === log.ip_address && parseInt(attempt.success) === 0).map(attempt => new Date(attempt.attempt_time).getTime());\n\n            // Sort the timestamps\n            failedAttemptsFromIP.sort((a, b) => a - b);\n\n            // Check for 5 failed attempts within any 1-minute window\n            let bruteForceDetected = false;\n            for (let i = 0; i <= failedAttemptsFromIP.length - 5; i++) {\n              if (failedAttemptsFromIP[i + 4] - failedAttemptsFromIP[i] <= 60 * 1000) {\n                bruteForceDetected = true;\n                break;\n              }\n            }\n            setIsBruteForce(bruteForceDetected);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching logs:', error);\n      }\n    };\n    if (isOpen && logId) {\n      fetchLogs();\n    }\n  }, [isOpen, logId]);\n  if (!isOpen || !selectedLog) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Log Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [isBruteForce && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brute-force-warning\",\n          children: [\"\\u26A0\\uFE0F \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Warning:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 32\n          }, this), \" Multiple failed login attempts detected from this IP within 1 minute.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), \"This may indicate a \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"brute force attack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 49\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"log-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: selectedLog.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"IP Address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: selectedLog.ip_address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: selectedLog.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Attempt Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: selectedLog.attempt_time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"User Agent:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: selectedLog.user_agent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status ${selectedLog.success === \"1\" ? 'success' : 'failure'}`,\n              children: selectedLog.success === \"1\" ? 'Success' : 'Failed'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(LogDetail, \"VIJhqhB5euNxJHShJC738mNUpmA=\");\n_c = LogDetail;\nexport default LogDetail;\nvar _c;\n$RefreshReg$(_c, \"LogDetail\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","LogDetail","isOpen","onClose","logId","_s","loginAttempts","setLoginAttempts","selectedLog","setSelectedLog","isBruteForce","setIsBruteForce","fetchLogs","response","fetch","ok","Error","status","data","json","success","attempts","log","find","attempt","id","failedAttemptsFromIP","filter","ip_address","parseInt","map","Date","attempt_time","getTime","sort","a","b","bruteForceDetected","i","length","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","email","user_agent","_c","$RefreshReg$"],"sources":["D:/thankyoustickers/Web-Application-Security-based-on-OWASP/src/pages/LogDetail.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport './LogDetail.css';\r\n\r\nconst LogDetail = ({ isOpen, onClose, logId }) => {\r\n    const [loginAttempts, setLoginAttempts] = useState([]);\r\n    const [selectedLog, setSelectedLog] = useState(null);\r\n    const [isBruteForce, setIsBruteForce] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchLogs = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost/backend/api/get_logs.php');\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n\r\n                const data = await response.json();\r\n                if (data.success) {\r\n                    setLoginAttempts(data.attempts);\r\n                    \r\n                    // Find the selected log\r\n                    const log = data.attempts.find(attempt => attempt.id === logId);\r\n                    if (log) {\r\n                        setSelectedLog(log);\r\n\r\n                        // Get all failed attempts from the same IP\r\n                        const failedAttemptsFromIP = data.attempts\r\n                            .filter(\r\n                                attempt =>\r\n                                    attempt.ip_address === log.ip_address &&\r\n                                    parseInt(attempt.success) === 0\r\n                            )\r\n                            .map(attempt => new Date(attempt.attempt_time).getTime());\r\n\r\n                        // Sort the timestamps\r\n                        failedAttemptsFromIP.sort((a, b) => a - b);\r\n\r\n                        // Check for 5 failed attempts within any 1-minute window\r\n                        let bruteForceDetected = false;\r\n                        for (let i = 0; i <= failedAttemptsFromIP.length - 5; i++) {\r\n                            if (failedAttemptsFromIP[i + 4] - failedAttemptsFromIP[i] <= 60 * 1000) {\r\n                                bruteForceDetected = true;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        setIsBruteForce(bruteForceDetected);\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching logs:', error);\r\n            }\r\n        };\r\n\r\n        if (isOpen && logId) {\r\n            fetchLogs();\r\n        }\r\n    }, [isOpen, logId]);\r\n\r\n    if (!isOpen || !selectedLog) return null;\r\n\r\n    return (\r\n        <div className=\"modal-overlay\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h2>Log Details</h2>\r\n                    <button className=\"close-button\" onClick={onClose}>×</button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {isBruteForce && (\r\n                        <div className=\"brute-force-warning\">\r\n                            ⚠️ <strong>Warning:</strong> Multiple failed login attempts detected from this IP within 1 minute.\r\n                            <br />\r\n                            This may indicate a <strong>brute force attack</strong>.\r\n                        </div>\r\n                    )}\r\n                    <div className=\"log-details\">\r\n                        <div className=\"detail-row\">\r\n                            <span className=\"detail-label\">ID:</span>\r\n                            <span className=\"detail-value\">{selectedLog.id}</span>\r\n                        </div>\r\n                        <div className=\"detail-row\">\r\n                            <span className=\"detail-label\">IP Address:</span>\r\n                            <span className=\"detail-value\">{selectedLog.ip_address}</span>\r\n                        </div>\r\n                        <div className=\"detail-row\">\r\n                            <span className=\"detail-label\">Email:</span>\r\n                            <span className=\"detail-value\">{selectedLog.email}</span>\r\n                        </div>\r\n                        <div className=\"detail-row\">\r\n                            <span className=\"detail-label\">Attempt Time:</span>\r\n                            <span className=\"detail-value\">{selectedLog.attempt_time}</span>\r\n                        </div>\r\n                        <div className=\"detail-row\">\r\n                            <span className=\"detail-label\">User Agent:</span>\r\n                            <span className=\"detail-value\">{selectedLog.user_agent}</span>\r\n                        </div>\r\n                        <div className=\"detail-row\">\r\n                            <span className=\"detail-label\">Status:</span>\r\n                            <span className={`status ${selectedLog.success === \"1\" ? 'success' : 'failure'}`}>\r\n                                {selectedLog.success === \"1\" ? 'Success' : 'Failed'}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}