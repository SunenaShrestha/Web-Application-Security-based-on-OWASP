{"ast":null,"code":"var _jsxFileName = \"D:\\\\thankyoustickers\\\\Web-Application-Security-based-on-OWASP\\\\src\\\\pages\\\\LogDetail.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { fetchLoginAttempts } from './Admin.jsx';\nimport './LogDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogDetail = ({\n  isOpen,\n  onClose,\n  logId\n}) => {\n  _s();\n  const [loginAttempts, setLoginAttempts] = useState([]);\n  const [selectedLog, setSelectedLog] = useState(null);\n  const [isBruteForce, setIsBruteForce] = useState(false);\n  useEffect(() => {\n    const fetchLogs = async () => {\n      try {\n        const response = await fetch('http://localhost/backend/api/get_logs.php');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        if (data.success) {\n          setLoginAttempts(data.attempts);\n\n          // Find selected log\n          const log = data.attempts.find(attempt => attempt.id == logId);\n          if (log) {\n            setSelectedLog(log);\n\n            // Brute Force Detection\n            const recentFailedAttempts = data.attempts.filter(attempt => attempt.ip_address === log.ip_address && parseInt(attempt.success) === 0 && new Date(attempt.attempt_time) > new Date(Date.now() - 30 * 60 * 1000));\n            setIsBruteForce(recentFailedAttempts.length >= 5);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching logs:', error);\n      }\n    };\n    if (isOpen && logId) {\n      fetchLogs();\n    }\n  }, [isOpen, logId]);\n  const handleClose = () => {\n    setSelectedLog(null);\n    setIsBruteForce(false);\n    onClose();\n  };\n  /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"close-button\",\n    onClick: handleClose,\n    children: \"\\xD7\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n  if (!isOpen || !selectedLog) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Log Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [isBruteForce && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brute-force-warning\",\n          children: \"\\u26A0\\uFE0F Warning: Multiple failed login attempts detected from this IP address. This may indicate a brute force attack.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"log-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: selectedLog.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"IP Address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: selectedLog.ip_address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: selectedLog.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Attempt Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: selectedLog.attempt_time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"User Agent:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: selectedLog.user_agent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status ${selectedLog.success === 1 ? 'success' : 'failure'}`,\n              children: selectedLog.success === 1 ? 'Success' : 'Failed'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(LogDetail, \"VIJhqhB5euNxJHShJC738mNUpmA=\");\n_c = LogDetail;\nexport default LogDetail;\nvar _c;\n$RefreshReg$(_c, \"LogDetail\");","map":{"version":3,"names":["useEffect","useState","fetchLoginAttempts","jsxDEV","_jsxDEV","LogDetail","isOpen","onClose","logId","_s","loginAttempts","setLoginAttempts","selectedLog","setSelectedLog","isBruteForce","setIsBruteForce","fetchLogs","response","fetch","ok","Error","status","data","json","success","attempts","log","find","attempt","id","recentFailedAttempts","filter","ip_address","parseInt","Date","attempt_time","now","length","error","console","handleClose","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","email","user_agent","_c","$RefreshReg$"],"sources":["D:/thankyoustickers/Web-Application-Security-based-on-OWASP/src/pages/LogDetail.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { fetchLoginAttempts } from './Admin.jsx';\r\nimport './LogDetail.css';\r\n\r\nconst LogDetail = ({ isOpen, onClose, logId }) => {\r\n    const [loginAttempts, setLoginAttempts] = useState([]);\r\n    const [selectedLog, setSelectedLog] = useState(null);\r\n    const [isBruteForce, setIsBruteForce] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchLogs = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost/backend/api/get_logs.php');\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                if (data.success) {\r\n                    setLoginAttempts(data.attempts);\r\n    \r\n                    // Find selected log\r\n                    const log = data.attempts.find(attempt => attempt.id == logId);\r\n                    if (log) {\r\n                        setSelectedLog(log);\r\n    \r\n                        // Brute Force Detection\r\n                        const recentFailedAttempts = data.attempts.filter(\r\n                            attempt =>\r\n                                attempt.ip_address === log.ip_address &&\r\n                                parseInt(attempt.success) === 0 &&\r\n                                new Date(attempt.attempt_time) > new Date(Date.now() - 30 * 60 * 1000)\r\n                        );\r\n                        setIsBruteForce(recentFailedAttempts.length >= 5);\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching logs:', error);\r\n            }\r\n        };\r\n    \r\n        if (isOpen && logId) {\r\n            fetchLogs();\r\n        }\r\n    }, [isOpen, logId]);\r\n    \r\n    const handleClose = () => {\r\n        setSelectedLog(null);\r\n        setIsBruteForce(false);\r\n        onClose();\r\n    };\r\n    \r\n    <button className=\"close-button\" onClick={handleClose}>×</button>\r\n    \r\n    \r\n    if (!isOpen || !selectedLog) return null;\r\n\r\n    return (\r\n        <div className=\"modal-overlay\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h2>Log Details</h2>\r\n                    <button className=\"close-button\" onClick={onClose}>×</button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {isBruteForce && (\r\n                        <div className=\"brute-force-warning\">\r\n                            ⚠️ Warning: Multiple failed login attempts detected from this IP address. \r\n                            This may indicate a brute force attack.\r\n                        </div>\r\n                    )}\r\n                    <div className=\"log-details\">\r\n                        <div className=\"detail-row\">\r\n                            <span className=\"detail-label\">ID:</span>\r\n                            <span className=\"detail-value\">{selectedLog.id}</span>\r\n                        </div>\r\n                        <div className=\"detail-row\">\r\n                            <span className=\"detail-label\">IP Address:</span>\r\n                            <span className=\"detail-value\">{selectedLog.ip_address}</span>\r\n                        </div>\r\n                        <div className=\"detail-row\">\r\n                            <span className=\"detail-label\">Email:</span>\r\n                            <span className=\"detail-value\">{selectedLog.email}</span>\r\n                        </div>\r\n                        <div className=\"detail-row\">\r\n                            <span className=\"detail-label\">Attempt Time:</span>\r\n                            <span className=\"detail-value\">{selectedLog.attempt_time}</span>\r\n                        </div>\r\n                        <div className=\"detail-row\">\r\n                            <span className=\"detail-label\">User Agent:</span>\r\n                            <span className=\"detail-value\">{selectedLog.user_agent}</span>\r\n                        </div>\r\n                        <div className=\"detail-row\">\r\n                            <span className=\"detail-label\">Status:</span>\r\n                            <span className={`status ${selectedLog.success === 1 ? 'success' : 'failure'}`}>\r\n                                {selectedLog.success === 1 ? 'Success' : 'Failed'}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogDetail; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}