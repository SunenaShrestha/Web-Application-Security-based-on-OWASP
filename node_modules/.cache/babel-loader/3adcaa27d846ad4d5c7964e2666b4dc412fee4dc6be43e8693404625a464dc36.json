{"ast":null,"code":"var _jsxFileName = \"C:\\\\fyp\\\\Thankyoustickers\\\\thankyoustickers\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  setUser: () => {},\n  loading: true,\n  logout: () => {},\n  checkAuth: () => {}\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const checkAuth = async () => {\n    try {\n      const response = await fetch('http://localhost/backend/api/check_auth.php', {\n        method: 'GET',\n        credentials: 'include',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (data.success && data.user) {\n        setUser(data.user);\n      } else {\n        setUser(null);\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check auth on mount and set up periodic checks\n  useEffect(() => {\n    checkAuth();\n\n    // Check session every minute\n    const intervalId = setInterval(checkAuth, 60000);\n\n    // Check session on window focus\n    const handleFocus = () => {\n      checkAuth();\n    };\n    window.addEventListener('focus', handleFocus);\n    return () => {\n      clearInterval(intervalId);\n      window.removeEventListener('focus', handleFocus);\n    };\n  }, []);\n\n  // Monitor user state changes\n  useEffect(() => {\n    if (user) {\n      // Reset the activity timer whenever there's user interaction\n      const resetTimer = () => {\n        localStorage.setItem('lastActivity', Date.now().toString());\n      };\n      window.addEventListener('mousemove', resetTimer);\n      window.addEventListener('keypress', resetTimer);\n      window.addEventListener('click', resetTimer);\n      window.addEventListener('scroll', resetTimer);\n      return () => {\n        window.removeEventListener('mousemove', resetTimer);\n        window.removeEventListener('keypress', resetTimer);\n        window.removeEventListener('click', resetTimer);\n        window.removeEventListener('scroll', resetTimer);\n      };\n    }\n  }, [user]);\n  const logout = async () => {\n    try {\n      await fetch('http://localhost/backend/api/logout.php', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setUser(null);\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n  const value = {\n    user,\n    setUser,\n    loading,\n    logout,\n    checkAuth\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Ui6DLq5vMU2GgsRY6PPBrtV3hI8=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","user","setUser","loading","logout","checkAuth","AuthProvider","children","_s","setLoading","response","fetch","method","credentials","headers","data","json","success","error","console","intervalId","setInterval","handleFocus","window","addEventListener","clearInterval","removeEventListener","resetTimer","localStorage","setItem","Date","now","toString","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/fyp/Thankyoustickers/thankyoustickers/src/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useState, useContext, useEffect } from 'react';\n\nconst AuthContext = createContext({\n  user: null,\n  setUser: () => {},\n  loading: true,\n  logout: () => {},\n  checkAuth: () => {}\n});\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const checkAuth = async () => {\n    try {\n      const response = await fetch('http://localhost/backend/api/check_auth.php', {\n        method: 'GET',\n        credentials: 'include',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      const data = await response.json();\n      \n      if (data.success && data.user) {\n        setUser(data.user);\n      } else {\n        setUser(null);\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check auth on mount and set up periodic checks\n  useEffect(() => {\n    checkAuth();\n\n    // Check session every minute\n    const intervalId = setInterval(checkAuth, 60000);\n\n    // Check session on window focus\n    const handleFocus = () => {\n      checkAuth();\n    };\n\n    window.addEventListener('focus', handleFocus);\n\n    return () => {\n      clearInterval(intervalId);\n      window.removeEventListener('focus', handleFocus);\n    };\n  }, []);\n\n  // Monitor user state changes\n  useEffect(() => {\n    if (user) {\n      // Reset the activity timer whenever there's user interaction\n      const resetTimer = () => {\n        localStorage.setItem('lastActivity', Date.now().toString());\n      };\n\n      window.addEventListener('mousemove', resetTimer);\n      window.addEventListener('keypress', resetTimer);\n      window.addEventListener('click', resetTimer);\n      window.addEventListener('scroll', resetTimer);\n\n      return () => {\n        window.removeEventListener('mousemove', resetTimer);\n        window.removeEventListener('keypress', resetTimer);\n        window.removeEventListener('click', resetTimer);\n        window.removeEventListener('scroll', resetTimer);\n      };\n    }\n  }, [user]);\n\n  const logout = async () => {\n    try {\n      await fetch('http://localhost/backend/api/logout.php', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setUser(null);\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n\n  const value = {\n    user,\n    setUser,\n    loading,\n    logout,\n    checkAuth\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}