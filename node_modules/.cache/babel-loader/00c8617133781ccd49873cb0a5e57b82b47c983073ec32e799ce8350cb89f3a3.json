{"ast":null,"code":"var _jsxFileName = \"D:\\\\thankyoustickers\\\\Web-Application-Security-based-on-OWASP\\\\src\\\\pages\\\\LogDetail.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { fetchLoginAttempts } from './Admin.jsx';\nimport './LogDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogDetail = ({\n  isOpen,\n  onClose,\n  logId\n}) => {\n  _s();\n  const [loginAttempts, setLoginAttempts] = useState([]);\n  const [selectedLog, setSelectedLog] = useState(null);\n  const [isBruteForce, setIsBruteForce] = useState(false);\n  const [isSqlInjection, setIsSqlInjection] = useState(false);\n  useEffect(() => {\n    const fetchLogs = async () => {\n      try {\n        const response = await fetch('http://localhost/backend/api/get_logs.php');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        if (data.success) {\n          setLoginAttempts(data.attempts);\n\n          // Find selected log\n          const log = data.attempts.find(attempt => attempt.id == logId);\n          if (log) {\n            setSelectedLog(log);\n\n            // Brute Force Detection\n            const recentFailedAttempts = data.attempts.filter(attempt => {\n              // Convert success to number for comparison\n              const success = parseInt(attempt.success);\n              return attempt.ip_address === log.ip_address && success === 0 &&\n              // Failed attempt\n              new Date(attempt.attempt_time) > new Date(Date.now() - 30 * 60 * 1000) // Last 30 minutes\n              ;\n            });\n            console.log('Recent failed attempts:', recentFailedAttempts.length);\n            setIsBruteForce(recentFailedAttempts.length >= 5);\n\n            // SQL Injection Detection\n            const isEmailSqlInjection = checkForSqlInjection(log.email);\n            const isUserAgentSqlInjection = checkForSqlInjection(log.user_agent);\n            setIsSqlInjection(isEmailSqlInjection || isUserAgentSqlInjection);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching logs:', error);\n      }\n    };\n    if (isOpen && logId) {\n      fetchLogs();\n    }\n  }, [isOpen, logId]);\n  if (!isOpen || !selectedLog) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Log Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [(isBruteForce || isSqlInjection) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"security-warnings\",\n          children: [isBruteForce && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"brute-force-warning\",\n            children: \"\\u26A0\\uFE0F Warning: Multiple failed login attempts detected from this IP address. This may indicate a brute force attack.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this), isSqlInjection && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sql-injection-warning\",\n            children: \"\\u26A0\\uFE0F Warning: SQL injection attempt detected in the login attempt. This is a potential security threat.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"log-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: selectedLog.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"IP Address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: selectedLog.ip_address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: selectedLog.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Attempt Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: selectedLog.attempt_time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"User Agent:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: selectedLog.user_agent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status ${parseInt(selectedLog.success) === 1 ? 'success' : 'failure'}`,\n              children: parseInt(selectedLog.success) === 1 ? 'Success' : 'Failed'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(LogDetail, \"iVdt5/q+uQC+ZuEsQwiiygc1vRI=\");\n_c = LogDetail;\nexport default LogDetail;\nvar _c;\n$RefreshReg$(_c, \"LogDetail\");","map":{"version":3,"names":["useEffect","useState","fetchLoginAttempts","jsxDEV","_jsxDEV","LogDetail","isOpen","onClose","logId","_s","loginAttempts","setLoginAttempts","selectedLog","setSelectedLog","isBruteForce","setIsBruteForce","isSqlInjection","setIsSqlInjection","fetchLogs","response","fetch","ok","Error","status","data","json","success","attempts","log","find","attempt","id","recentFailedAttempts","filter","parseInt","ip_address","Date","attempt_time","now","console","length","isEmailSqlInjection","checkForSqlInjection","email","isUserAgentSqlInjection","user_agent","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/thankyoustickers/Web-Application-Security-based-on-OWASP/src/pages/LogDetail.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { fetchLoginAttempts } from './Admin.jsx';\nimport './LogDetail.css';\n\nconst LogDetail = ({ isOpen, onClose, logId }) => {\n    const [loginAttempts, setLoginAttempts] = useState([]);\n    const [selectedLog, setSelectedLog] = useState(null);\n    const [isBruteForce, setIsBruteForce] = useState(false);\n    const [isSqlInjection, setIsSqlInjection] = useState(false);\n\n    useEffect(() => {\n        const fetchLogs = async () => {\n            try {\n                const response = await fetch('http://localhost/backend/api/get_logs.php');\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                const data = await response.json();\n                if (data.success) {\n                    setLoginAttempts(data.attempts);\n    \n                    // Find selected log\n                    const log = data.attempts.find(attempt => attempt.id == logId);\n                    if (log) {\n                        setSelectedLog(log);\n    \n                        // Brute Force Detection\n                        const recentFailedAttempts = data.attempts.filter(attempt => {\n                            // Convert success to number for comparison\n                            const success = parseInt(attempt.success);\n                            return (\n                                attempt.ip_address === log.ip_address &&\n                                success === 0 && // Failed attempt\n                                new Date(attempt.attempt_time) > new Date(Date.now() - 30 * 60 * 1000) // Last 30 minutes\n                            );\n                        });\n\n                        console.log('Recent failed attempts:', recentFailedAttempts.length);\n                        setIsBruteForce(recentFailedAttempts.length >= 5);\n    \n                        // SQL Injection Detection\n                        const isEmailSqlInjection = checkForSqlInjection(log.email);\n                        const isUserAgentSqlInjection = checkForSqlInjection(log.user_agent);\n                        setIsSqlInjection(isEmailSqlInjection || isUserAgentSqlInjection);\n                    }\n                }\n            } catch (error) {\n                console.error('Error fetching logs:', error);\n            }\n        };\n    \n        if (isOpen && logId) {\n            fetchLogs();\n        }\n    }, [isOpen, logId]);\n\n    if (!isOpen || !selectedLog) return null;\n\n    return (\n        <div className=\"modal-overlay\">\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h2>Log Details</h2>\n                    <button className=\"close-button\" onClick={onClose}>×</button>\n                </div>\n                <div className=\"modal-body\">\n                    {(isBruteForce || isSqlInjection) && (\n                        <div className=\"security-warnings\">\n                            {isBruteForce && (\n                                <div className=\"brute-force-warning\">\n                                    ⚠️ Warning: Multiple failed login attempts detected from this IP address. \n                                    This may indicate a brute force attack.\n                                </div>\n                            )}\n                            {isSqlInjection && (\n                                <div className=\"sql-injection-warning\">\n                                    ⚠️ Warning: SQL injection attempt detected in the login attempt.\n                                    This is a potential security threat.\n                                </div>\n                            )}\n                        </div>\n                    )}\n                    <div className=\"log-details\">\n                        <div className=\"detail-row\">\n                            <span className=\"detail-label\">ID:</span>\n                            <span className=\"detail-value\">{selectedLog.id}</span>\n                        </div>\n                        <div className=\"detail-row\">\n                            <span className=\"detail-label\">IP Address:</span>\n                            <span className=\"detail-value\">{selectedLog.ip_address}</span>\n                        </div>\n                        <div className=\"detail-row\">\n                            <span className=\"detail-label\">Email:</span>\n                            <span className=\"detail-value\">{selectedLog.email}</span>\n                        </div>\n                        <div className=\"detail-row\">\n                            <span className=\"detail-label\">Attempt Time:</span>\n                            <span className=\"detail-value\">{selectedLog.attempt_time}</span>\n                        </div>\n                        <div className=\"detail-row\">\n                            <span className=\"detail-label\">User Agent:</span>\n                            <span className=\"detail-value\">{selectedLog.user_agent}</span>\n                        </div>\n                        <div className=\"detail-row\">\n                            <span className=\"detail-label\">Status:</span>\n                            <span className={`status ${parseInt(selectedLog.success) === 1 ? 'success' : 'failure'}`}>\n                                {parseInt(selectedLog.success) === 1 ? 'Success' : 'Failed'}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default LogDetail; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}